<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <xs:complexType name="report">
        <xs:sequence>
            <xs:element name="version" type="xs:string"/>
            <xs:element name="start_datetime" type="xs:dateTime"/>
            <xs:element name="finish_datetime" type="xs:dateTime"/>
            <xs:element name="sitemap" type="sitemap"/>

            <!--
                Dumped profile, save it as a YAML file and use it as a
                scan profile via whatever interface you want or parse it
                into a Hash and use it to configure Arachni over RPC.
            -->
            <xs:element name="options" type="xs:string"/>
            <xs:element name="issues" type="issues"/>
            <!--<xs:attribute name="plugins" type="plugins"/>-->
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="sitemap">
        <xs:sequence>
            <xs:element name="sitemapentry" type="sitemapentry"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="sitemapentry">
        <xs:sequence>
            <xs:element name="code" type="xs:integer"/>
            <xs:element name="url" type="xs:anyURI"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="issues">
        <xs:sequence>
            <xs:element name="issue" type="issue"/>
        </xs:sequence>
    </xs:complexType>

    <!--
        Holds generic information about the logged issue, while providing
        details as "issuevariations" via the "variations" attribute.
    -->
    <xs:complexType name="issue">
        <xs:sequence>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="description" type="xs:string"/>
            <xs:element name="remedy_guidance" type="xs:string"/>
            <xs:element name="remedy_code" type="xs:string"/>
            <xs:element name="severity" type="severity"/>
            <xs:element name="references" type="references"/>
            <xs:element name="cwe" type="xs:integer"/>
            <xs:element name="vector" type="vector"/>
            <xs:element name="digest" type="xs:integer"/>
            <xs:element name="variations" type="issuevariations"/>
        </xs:sequence>
    </xs:complexType>

    <!--
        Issues have 1 or more variations.
        Currently, active checks only have 1 variation while passive ones
        can have multiple.
    -->
    <xs:complexType name="issuevariations">
        <xs:sequence>
            <xs:element name="variation" type="issuevariation"
                        minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!--
        Input vector information, in essence, the element affected
        by the logged issue.

        The data therein are the original, non-fuzzed ones.
    -->
    <xs:complexType name="vector">
        <xs:sequence>
            <xs:element name="class" type="vectorclass"/>
            <xs:element name="type" type="xs:string"/>
            <xs:element name="url" type="xs:string"/>

            <xs:element name="action" type="xs:string" minOccurs="0"
                        maxOccurs="1"/>
            <xs:element name="method" type="xs:string" minOccurs="0"
                        maxOccurs="1"/>

            <!-- Vulnerable input. -->
            <xs:element name="affected_input_name" type="xs:string"
                        minOccurs="0" maxOccurs="1"/>

            <xs:element name="inputs" type="inputs" minOccurs="0"
                        maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <!--
        Details about the logged issue, each variation represents a
        situation where the same issue has been identified albeit in
        different ways.
    -->
    <xs:complexType name="issuevariation">
        <xs:sequence>
            <xs:element name="variationvector" type="variationvector"/>
            <xs:element name="page" type="page"/>
            <xs:element name="referring_page" type="page"/>
            <xs:element name="signature" type="xs:string"/>
            <xs:element name="proof" type="xs:string"/>
            <xs:element name="trusted" type="xs:boolean"/>
            <xs:element name="remarks" type="remarks"/>
            <xs:element name="platform_type" type="xs:string"/>
            <xs:element name="platform_name" type="xs:string"/>
            <xs:element name="response" type="xs:string"/>
            <xs:element name="request" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="response">
        <xs:sequence>
            <xs:element name="url" type="xs:string"/>
            <xs:element name="code" type="xs:integer"/>
            <xs:element name="ip_address" type="xs:string"/>
            <xs:element name="headers" type="inputs"/>
            <xs:element name="body" type="xs:string"/>
            <xs:element name="time" type="xs:decimal"/>
            <xs:element name="curl_code" type="xs:string"/>
            <xs:element name="curl_message" type="xs:string"/>
            <xs:element name="raw" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="request">
        <xs:sequence>
            <xs:element name="url" type="xs:string"/>
            <xs:element name="method" type="xs:string"/>
            <xs:element name="parameters" type="inputs"/>
            <xs:element name="body" type="xs:string"/>
            <xs:element name="headers" type="inputs"/>
            <xs:element name="raw" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <!--
        System components can attach remarks on issues, usually to explain
        why an issue has been flagged as untrusted.
    -->
    <xs:complexType name="remarks">
        <xs:sequence>
            <xs:element name="commenter" type="xs:string"/>
            <xs:element name="remarks" type="xs:string"
                        minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!--
        This is details on the state of the logged vector when
        an "issuevariation" was identified.

        Merged with "vector" it forms the full vector mutation.
    -->
    <xs:complexType name="variationvector">
        <xs:sequence>
            <xs:element name="method" type="xs:string" minOccurs="0"
                        maxOccurs="1"/>

            <xs:element name="affected_input_value" type="xs:string"
                        minOccurs="0" maxOccurs="1"/>

            <xs:element name="seed" type="xs:string" minOccurs="0"
                        maxOccurs="1"/>

            <xs:element name="inputs" type="inputs" minOccurs="0"
                        maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="page">
        <xs:sequence>
            <xs:element name="body" type="xs:string"/>
            <xs:element name="dom" type="pagedom"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="pagedom">
        <xs:sequence>
            <xs:element name="url" type="xs:anyURI"/>

            <!--
                Interactions, between the browser and the page, required
                to restore the page to the logged state.
            -->
            <xs:element name="transitions" type="transitions"/>

            <!--
                Flow-points of a tainted value in the JS environment.
            -->
            <xs:element name="data_flow_sinks" type="data_flow_sinks"/>

            <!--
                Points of execution of an injected JS payload.
            -->
            <xs:element name="execution_flow_sinks"
                          type="execution_flow_sinks"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="transitions">
        <xs:sequence>
            <xs:element name="transition" type="transition"
                        minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!--
        Represents an interaction between the browser and the
        page.
    -->
    <xs:complexType name="transition">
        <xs:sequence>
            <xs:element name="element" type="xs:string"/>
            <xs:element name="event" type="xs:string"/>
            <xs:element name="time" type="xs:decimal"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="data_flow_sinks">
        <xs:sequence>
            <xs:element name="data_flow_sink" type="data_flow_sink"
                        minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!--
        Flow-points of a tainted value in the JS environment.
    -->
    <xs:complexType name="data_flow_sink">
        <xs:sequence>
            <xs:element name="function" type="function"/>

            <!--
                Object where the "function" was defined.
            -->
            <xs:element name="object" type="xs:string"/>

            <!--
                "function:arguments" index of the argument that contains
                the "tainted_value".
            -->
            <xs:element name="tainted_argument_index" type="xs:decimal"/>

            <!--
                The tainted value, which isn't necessarily the tainted
                argument object itself.
                The value will have been located recursively in the tainted
                argument object's properties if need be.
            -->
            <xs:element name="tainted_value" type="xs:string"/>

            <!--
                The injected taint.
            -->
            <xs:element name="taint" type="xs:string"/>

            <!--
                Stacktrace of this call.
            -->
            <xs:element name="trace" type="trace"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="execution_flow_sinks">
        <xs:sequence>
            <xs:element name="execution_flow_sink"
                        type="execution_flow_sink"
                        minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="execution_flow_sink">
        <xs:sequence>
            <xs:element name="trace" type="trace"/>
        </xs:sequence>
    </xs:complexType>

    <!--
        JS function referenced by "pagedom" sink data.
    -->
    <xs:complexType name="function">
        <xs:sequence>
            <xs:element name="source" type="xs:string"/>
            <xs:element name="arguments" type="functionarguments"/>
            <xs:element name="name" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="functionarguments">
        <xs:sequence>
            <xs:element name="argument" type="xs:string"
                        minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="trace">
        <xs:sequence>
            <xs:element name="item" type="traceitem"
                        minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="traceitem">
        <xs:sequence>
            <xs:element name="function" type="function"/>
            <xs:element name="line" type="xs:integer"/>
            <xs:element name="url" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="inputs">
        <xs:sequence>
            <xs:element name="input" type="input"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="input">
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="value" type="xs:string"/>
    </xs:complexType>

    <xs:simpleType name="vectorclass">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Arachni::Element::Body" />
            <xs:enumeration value="Arachni::Element::Server" />
            <xs:enumeration value="Arachni::Element::Path" />
            <xs:enumeration value="Arachni::Element::Form" />
            <xs:enumeration value="Arachni::Element::Form::DOM" />
            <xs:enumeration value="Arachni::Element::Link" />
            <xs:enumeration value="Arachni::Element::Link::DOM"/>
            <xs:enumeration value="Arachni::Element::Cookie" />
            <xs:enumeration value="Arachni::Element::Cookie::DOM" />
            <xs:enumeration value="Arachni::Element::Header" />
            <xs:enumeration value="Arachni::Element::LinkTemplate" />
            <xs:enumeration value="Arachni::Element::LinkTemplate::DOM"/>
            <xs:enumeration value="Arachni::Element::GenericDOM" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="severity">
        <xs:restriction base="xs:string">
            <xs:enumeration value="high" />
            <xs:enumeration value="medium" />
            <xs:enumeration value="low" />
            <xs:enumeration value="informational"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="references">
        <xs:sequence>
            <xs:element name="reference" type="reference"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="reference">
        <xs:attribute name="title" type="xs:string"/>
        <xs:attribute name="url" type="xs:anyURI"/>
    </xs:complexType>

</xs:schema>
